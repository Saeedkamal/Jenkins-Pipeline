pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/main']], 
                    userRemoteConfigs: [[url: 'https://github.com/Saeedkamal/Jenkins-Pipeline.git']]
                ])
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building the project using Maven...'
                // sh 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    logFile = "unit_integration_tests.log"
                    sh "echo Running unit and integration tests... > ${logFile}"
                    // sh 'mvn test >> ${logFile} 2>&1'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: logFile, allowEmptyArchive: true
                    emailext(
                        to: 'fernandosenan@gmail.com',
                        subject: "Unit and Integration Tests Success: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """<p>The Unit and Integration Tests stage has completed successfully.</p>
                                 <p>Please find the log attached.</p>""",
                        attachmentsPattern: logFile
                    )
                }
                failure {
                    archiveArtifacts artifacts: logFile, allowEmptyArchive: true
                    emailext(
                        to: 'fernandosenan@gmail.com',
                        subject: "Unit and Integration Tests Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """<p>The Unit and Integration Tests stage has failed. Please check the attached log for details.</p>""",
                        attachmentsPattern: logFile
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Running static code analysis with SonarQube...'
                // SonarQube scan step
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    logFile = "security_scan.log"
                    sh "echo Running security scan... > ${logFile}"
                    // sh 'dependency-check.sh >> ${logFile} 2>&1'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: logFile, allowEmptyArchive: true
                    emailext(
                        to: 'fernandosenan@gmail.com',
                        subject: "Security Scan Success: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """<p>The Security Scan stage has completed successfully.</p>
                                 <p>Please find the log attached.</p>""",
                        attachmentsPattern: logFile
                    )
                }
                failure {
                    archiveArtifacts artifacts: logFile, allowEmptyArchive: true
                    emailext(
                        to: 'fernandosenan@gmail.com',
                        subject: "Security Scan Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                        body: """<p>The Security Scan stage has failed. Please check the attached log for details.</p>""",
                        attachmentsPattern: logFile
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server...'
                // Deployment script
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Test script for staging
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server...'
                // Production deployment script
            }
        }
    }

   post {
        success {
            mail to: 'fernandosenan@gmail.com',
            subject: "Pipeline Success: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
            body: "The pipeline has completed successfully."
        }
    }
}
